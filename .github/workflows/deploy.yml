name: Terraform Infra + Website Deploy

on:
  push:
    branches:
      - project
    paths:
      - '**.tf'
      - '.website/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Import existing infra from tfstate
        run: |
          terraform import aws_vpc.myvpc vpc-0a12bc34d56789ef0
          terraform import aws_subnet.public-subnet subnet-0b34de56f78acdef0
          terraform import aws_subnet.private-subnet subnet-0b56ef78ab12cd340
          terraform import aws_internet_gateway.gw igw-01234abc5678efgh9
          terraform import aws_route_table.route rtb-01ab23cd45efgh67
          terraform import aws_route_table_association.a rtbassoc-0123456789abcdef0
          terraform import aws_security_group.Firewall sg-0123abcd4567efgh8
          terraform import aws_vpc_security_group_ingress_rule.inbound-rules sgr-0aaabbbccc1234xyz
          terraform import aws_vpc_security_group_ingress_rule.allow_http sgr-0cccbbbaaa5678xyz
          terraform import aws_vpc_security_group_egress_rule.allow_all_outbound sgr-0ddddbbbfff999xyz


      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Sync .website to S3
        run: |
          if [ -d ".website" ]; then
            aws s3 sync ./.website s3://dishant-connected-bucket --delete
          else
            echo ".website folder not found. Skipping sync."
          fi
